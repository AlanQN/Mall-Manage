<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.scau.dao.UserMapper" >

  <!-- 添加用户 -->
  <insert id="insert" parameterType="cn.edu.scau.entity.User" >
    insert into tb_user (username, password,
      phone, email, created,
      updated, sex, state,
      headicon, description)
    values (#{username}, #{password},
      #{phone}, #{email}, #{created},
      #{updated}, #{sex}, #{state},
      #{headicon}, #{description})
  </insert>

  <!-- 更新用户信息 -->
  <update id="update" parameterType="cn.edu.scau.entity.User" >
    update tb_user
    <set >
    <if test="username != null and username != ''" >
      username = #{username},
    </if>
    <if test="password != null and password != ''" >
      password = #{password},
    </if>
    <if test="phone != null and phone != ''" >
      phone = #{phone},
    </if>
    <if test="email != null and email != ''" >
      email = #{email},
    </if>
    <if test="created != null" >
    created = #{created},
    </if>
    <if test="updated != null" >
      updated = #{updated},
    </if>
    <if test="sex != null" >
      sex = #{sex},
    </if>
    <if test="state != null" >
      state = #{state},
    </if>
    <if test="headicon != null" >
      headicon = #{headicon},
    </if>
    <if test="description != null" >
      description = #{description},
    </if>
    </set>
    where id = #{id}
  </update>

  <!-- 移除单个用户：即将state改为2，表示移除 -->
  <update id="removeOne" parameterType="java.lang.Integer">
      update tb_user
      set state = 2
      where id = #{id}
  </update>

  <!-- 批量移除用户 -->
  <update id="removeMore">
      update tb_user
      set state = 2
      <where>
          <if test="array != null and array.length > 0">
              and id in
              <foreach collection="array" item="id" open="(" separator="," close=")">
                  #{id}
              </foreach>
          </if>
      </where>
  </update>

  <!-- 删除单个用户 -->
  <delete id="deleteOne" parameterType="java.lang.Integer" >
    delete from tb_user where id = #{id}
  </delete>

  <!-- 批量删除用户 -->
  <delete id="deleteMore" parameterType="java.util.List">
    delete from tb_user
    <where>
      <if test="array != null and array.length > 0">
        and id in 
        <foreach collection="array" item="id" open="(" separator="," close=")">
          #{id}
        </foreach>
      </if>
    </where>
  </delete>

  <!-- 从删除列表中还原单个用户 -->
  <update id="restoreOne" parameterType="java.lang.Integer">
    update tb_user set state = 0 where id = #{id};
  </update>

  <!-- 从删除列表中批量还原用户 -->
  <update id="restoreMore">
    update tb_user set state = 0
    <where>
      <if test="array != null and array.length > 0">
        and id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
          #{id}
        </foreach>
      </if>
    </where>
  </update>

  <!-- 禁用用户 -->
  <update id="pause" parameterType="java.lang.Integer">
    update tb_user
    set state = 1
    where id = #{id}
  </update>

  <!-- 启用用户 -->
  <update id="resume" parameterType="java.lang.Integer">
    update tb_user
    set state = 0
    where id = #{id}
  </update>

  <!-- 根据id查找用户 -->
  <select id="findById" resultType="cn.edu.scau.entity.User" parameterType="java.lang.Integer" >
    select id, username, phone, email, created, updated, state, sex, headicon, description from tb_user where id = #{id}
  </select>

  <!-- 获取记录总数 -->
  <select id="getSearchNum" resultType="java.lang.Integer" parameterType="cn.edu.scau.component.Page">
    select count(*) from tb_user
    <where>
      <if test="keyword != null and keyword != ''">
        <if test="keyType != null and keyType == 1">  <!-- 根据id -->
          and id like '%${keyword}%'
        </if>
        <if test="keyType != null and keyType == 2">  <!-- 根据用户名 -->
          and username like '%${keyword}%'
        </if>
        <if test="keyType != null and keyType == 3">  <!-- 根据手机号 -->
          and phone like '%${keyword}%'
        </if>
        <if test="keyType != null and keyType == 4">  <!-- 根据邮箱 -->
          and email like '%${keyword}%'
        </if>
      </if>
    </where>
  </select>

  <!-- 根据指定字段模糊查找用户 -->
  <select id="fuzzyFindByField" resultType="cn.edu.scau.entity.User" parameterType="cn.edu.scau.component.Page">
    select id, username, phone, email, created, updated, state from tb_user
    <where>
      <if test="keyword != null and keyword != ''">
        <if test="keyType != null and keyType == 1">  <!-- 根据id -->
          and id like '%${keyword}%'
        </if>
        <if test="keyType != null and keyType == 2">  <!-- 根据用户名 -->
          and username like '%${keyword}%'
        </if>
        <if test="keyType != null and keyType == 3">  <!-- 根据手机号 -->
          and phone like '%${keyword}%'
        </if>
        <if test="keyType != null and keyType == 4">  <!-- 根据邮箱 -->
          and email like '%${keyword}%'
        </if>
      </if>
    </where>
    limit #{startIndex}, #{pageSize}
  </select>

  <!-- 根据唯一的字段查找用户（邮箱、手机号和名称） -->
  <select id="findByUniqueField" resultType="cn.edu.scau.entity.User" parameterType="cn.edu.scau.entity.User">
    select email from tb_user
      <where>
        <if test="id != null and id != ''">
          and id != #{id}
        </if>
        <if test="email != null and email != ''">
          and ( email = #{email}
        </if>
        <if test="phone != null and phone != ''">
          or phone = #{phone}
        </if>
        <if test="username != null and username != ''">
          or username = #{username} )
        </if>
      </where>
  </select>

  <!-- 分页查找用户 -->
  <select id="findNormalByPage" resultType="cn.edu.scau.entity.User" parameterType="cn.edu.scau.component.Page">
    select id, username, phone, email, created, updated, state from tb_user
     where state != 2 limit #{startIndex}, #{pageSize}
  </select>

  <!-- 获取用户总数 -->
  <select id="getNormalUserNum" resultType="java.lang.Integer">
    select count(*) from tb_user where state != 2;
  </select>

  <!-- 分页查找已移除用户 -->
  <select id="findRemoveByPage" resultType="cn.edu.scau.entity.User" parameterType="cn.edu.scau.component.Page">
    select id, username, phone, email, created, updated, state from tb_user
     where state = 2 limit #{startIndex}, #{pageSize}
  </select>

  <!-- 获取已移除用户总数 -->
  <select id="getRemoveUserNum" resultType="java.lang.Integer">
    select count(*) from tb_user where state = 2;
  </select>

</mapper>