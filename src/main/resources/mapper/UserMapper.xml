<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.scau.dao.UserMapper" >

  <!-- 添加用户 -->
  <insert id="insert" parameterType="cn.edu.scau.entity.User" >
    insert into tb_user (username, password,
      phone, email, created,
      updated, sex, state,
      headicon, description)
    values (#{username}, #{password},
      #{phone}, #{email}, #{created},
      #{updated}, #{sex}, #{state},
      #{headicon}, #{description})
  </insert>

  <!-- 更新用户信息 -->
  <update id="update" parameterType="cn.edu.scau.entity.User" >
    update tb_user
    set username = #{username}, password = #{password},
      phone = #{phone}, email = #{email},
      created = #{created}, updated = #{updated},
      sex = #{sex}, state = #{state},
      headicon = #{headicon}, description = #{description}
    where id = #{id}
  </update>

  <!-- 删除单个用户 -->
  <delete id="deleteOne" parameterType="java.lang.Integer" >
    delete from tb_user where id = #{id}
  </delete>

  <!-- 批量删除用户 -->
  <delete id="deleteMore" parameterType="java.util.List">
    delete from tb_user
    <where>
      <if test="idList != null and idList.size() > 0">
        and id in 
        <foreach collection="idList" item="id" open="(" separator="," close=")">
          #{id}
        </foreach>
      </if>
    </where>
  </delete>

  <!-- 根据id查找用户 -->
  <select id="find" resultType="cn.edu.scau.entity.User" parameterType="java.lang.Integer" >
    select id, username, phone, email, created, updated, state, sex, headicon, description from tb_user where id = #{id}
  </select>

  <!-- 根据名称模糊查找用户 -->
  <select id="fuzzyFindByName" resultType="cn.edu.scau.entity.User" parameterType="java.lang.String">
    select id, username, phone, email, created, updated, state from tb_user where username like ‘%#{name}%’
  </select>

  <!-- 根据手机号模糊查找用户 -->
  <select id="fuzzyFindByPhone" resultType="cn.edu.scau.entity.User" parameterType="java.lang.String">
    select id, username, phone, email, created, updated, state from tb_user where phone like ‘%#{phone}%’
  </select>

  <!-- 根据id模糊查找用户 -->
  <select id="fuzzyFindById" resultType="cn.edu.scau.entity.User" parameterType="java.lang.String">
    select id, username, phone, email, created, updated, state from tb_user where id like ‘%#{id}%’
  </select>

  <!-- 根据邮箱查找用户 -->
  <select id="findByEmail" resultType="cn.edu.scau.entity.User" parameterType="java.lang.String">
    select email from tb_user where email = #{email}
  </select>

  <!-- 根据手机号查找用户 -->
  <select id="findByPhone" resultType="cn.edu.scau.entity.User" parameterType="java.lang.String">
    select phone from tb_user where phone = #{phone}
  </select>

  <!-- 根据名称查找用户 -->
  <select id="findByName" resultType="cn.edu.scau.entity.User" parameterType="java.lang.String">
    select username from tb_user where username = #{name}
  </select>

  <!-- 分页查找用户 -->
  <select id="findByPage" resultType="cn.edu.scau.entity.User" parameterType="java.lang.Integer"></select>

</mapper>